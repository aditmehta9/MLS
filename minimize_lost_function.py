# -*- coding: utf-8 -*-
"""Lab1_Q3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IRyMOz3kY9_3_5aLLevBLXlHVQVmyM7b
"""

import pandas as pd
import numpy as np
from sympy import symbols
import statistics as st
data = pd.read_excel("data for Problem1.xlsx", "Sheet1")

mx = np.array(data["x"])
ma = st.mean(mx)
vx = st.stdev(mx)
x = np.atleast_2d( (data["x"] - ma)/vx ).T

o = np.ones((x.shape[0],1))
x = np.hstack((o,x))

y = np.atleast_2d(data["y"]).T

# print(x)

theta0, theta1 = symbols('theta0 theta1')
t = [[theta0], [theta1]]

exp = (y - np.dot(x,t))**2
exp = np.sum(exp)
t1 = np.arange(-25, 25, 1)

def solve(exp, t1, t2):
  l = [0]*t1.size
  for i in range(t1.size):
    exp1 = exp.subs(theta0, t1[i]).subs(theta1, t2[i])
    l[i] = float(exp1)
  return l

T1, T2 = np.meshgrid(t1, t1)
z = np.array(solve(exp, np.ravel(T1), np.ravel(T2)))
z = z.reshape(T1.shape)

# z = []
# for i in t1:
#   for j in t1:
#     t2 = [[i],[j]]
#     exp3 = (y - np.dot(x,t2))**2
#     exp3 = exp3.sum()
#     z.append(exp3)
      
z = np.array(z);


# z = z.reshape(T1.shape)

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
# %matplotlib notebook

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
# print(z)
ax.plot_surface(T1, T2, z)
print(z);
plt.show()

# Q-4 find theta using pseudo inverse

X = np.matrix(x)
Y = np.matrix(y)
theta = np.linalg.inv(X.T * X) * X.T * Y

# Q-5 find cost using theatas find in Q-4
exp1 = exp.subs(theta0, theta[0]).subs(theta1, theta[1])
exp2 = exp.subs(theta0, 12).subs(theta1, 25)

exp1 = exp1/(2*x.shape[0])
exp2 = exp2/(2*x.shape[0])

print(exp1)
print(exp2)

